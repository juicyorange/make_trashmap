<!DOCTYPE html>
    <html>
      <head>
          <meta charset="utf-8">
          <title><%= title %></title>
        
        <!--부트스트랩-->
        <!-- 합쳐지고 최소화된 최신 CSS -->
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css">
        <!-- 부가적인 테마 -->
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap-theme.min.css">

        <link rel='stylesheet' href='/stylesheets/style.css' />

        <!--아래 스타일은 지도만을 위한 스타일들이다.-->
      <style>
          body, html{
              padding-top: 0px;
              width:100%;
              height:100%;
          }
          textarea{
            float:left ;
            width:70% ;
            margin-right:3px;
          }
          .map_wrap {position:relative;width:100%;height:100%;}
          .title {font-weight:bold;display:block;}
          .hAddr {position:absolute;left:10px;top:10px;border-radius: 2px;background:#fff;background:rgba(255,255,255,0.8);z-index:1;padding:5px;}
          .app_title {position:absolute;left:44%;top:10px;border-radius: 2px;background:#fff;background:rgba(255, 255, 255, 0);z-index:1;padding:5px;}

          .input_code {position:absolute;right:10px;top:10px;border-radius: 2px;background:#fff;background:rgba(255,255,255,0.8);z-index:1;padding:5px;}
          #centerAddr {display:block;margin-top:2px;font-weight: normal;}
          .bAddr {padding:3px;text-overflow: ellipsis;overflow: hidden;white-space: nowrap;}
      </style>

      </head>

      <body>
        <div class="map_wrap">
            <div id="map" style="width:100%;height:100%;position:relative;overflow:hidden;"></div>
            <div class="hAddr">
                <span class="title">지도 중심 주소</span>
                <span id="centerAddr"></span>
            </div>
            <div class="app_title"><a style="text-decoration:none; color:black; font-size:xx-large"  href="/login">Trash Map</a></div>
         </div>

         <!--footer-->
         <footer class="footer" style="padding-left:15%; padding-right: 5%; ">
            <div class="container" style="float: left; width:33%">
                <p class="text-muted">2020-2 web/python termproject</p>
            </div>
            <div class="container" style="float: right; width:33%">
                <p class="text-muted">Seoul_Trash_Map v1.0</p>
            </div>
        </footer>

        <script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=<%= appkey %>&libraries=services,clusterer,drawing"></script>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>

        <!-- 지도를 출력해주기 위한 javscript -->
        <script>
            var mapContainer = document.getElementById('map'), // 지도를 표시할 div
                mapOption = {
                    center: new kakao.maps.LatLng(33.450701, 126.570667), // 지도의 중심좌표
                    level: 8 // 지도의 확대 레벨
                };

            var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다
            var geocoder = new kakao.maps.services.Geocoder(); // 주소-좌표 변환 객체를 생성합니다

            var clusterer = new kakao.maps.MarkerClusterer({
                    map: map, // 마커들을 클러스터로 관리하고 표시할 지도 객체
                    averageCenter: true, // 클러스터에 포함된 마커들의 평균 위치를 클러스터 마커 위치로 설정
                    minLevel: 6 // 클러스터 할 최소 지도 레벨
                });

            // 현재 위치 지도상에서 표시하기.
            // HTML5의 geolocation으로 사용할 수 있는지 확인합니다
            if (navigator.geolocation) {

                // GeoLocation을 이용해서 접속 위치를 얻어옵니다
                navigator.geolocation.getCurrentPosition(function(position) {

                    var lat = position.coords.latitude, // 위도
                        lon = position.coords.longitude; // 경도

                    var locPosition = new kakao.maps.LatLng(lat, lon), // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다
                        message = '<div style="padding:5px;">여기에 계신가요?!</div>'; // 인포윈도우에 표시될 내용입니다
                
                    // 마커를 생성합니다
                    var marker = new kakao.maps.Marker({
                        map: map,
                        position: locPosition
                    
                    });
                    // 인포윈도우를 생성합니다
                    var infowindow = new kakao.maps.InfoWindow({
                        position : iwPosition, 
                        content : message,
                        removable : iwRemoveable
                    });
                    
                    kakao.maps.event.addListener(marker, 'mouseout', makeOutListener(infowindow));
                    infowindow.open(map, marker);

                    // 지도 중심좌표를 접속위치로 변경합니다
                    map.setCenter(locPosition);
                });
            } 
            else { // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다
                var locPosition = new kakao.maps.LatLng(37.5642135, 127.0016985);
                alert('현재위치 기능을 사용할수 없어요.. 서울의 중심으로 옮겨드릴게요!');
                map.setCenter(locPosition);
            }

            //현재 중심이 되는 위치 표시. 이때 지도를 이동하면 바로 변경된다. 지도 중심을 구하는데 필요. 
            //좌측 상단에 지도의 중심을 표시한다. 
            //'idle'이 중심이 변했을때 이벤트가 발생하게 해주는 파라미터이다. 
            kakao.maps.event.addListener(map, 'idle', function() {
                searchAddrFromCoords(map.getCenter(), displayCenterInfo);
            });

            function searchAddrFromCoords(coords, callback) {
                // 좌표로 행정동 주소 정보를 요청합니다
                geocoder.coord2RegionCode(coords.getLng(), coords.getLat(), callback);
            }

            function searchDetailAddrFromCoords(coords, callback) {
                // 좌표로 법정동 상세 주소 정보를 요청합니다
                geocoder.coord2Address(coords.getLng(), coords.getLat(), callback);
            }

            // 지도 좌측상단에 지도 중심좌표에 대한 주소정보를 표출하는 함수입니다
            function displayCenterInfo(result, status) {
                if (status === kakao.maps.services.Status.OK) {
                    var infoDiv = document.getElementById('centerAddr');

                    for(var i = 0; i < result.length; i++) {
                        // 행정동의 region_type 값은 'H' 이므로
                        if (result[i].region_type === 'H') {
                            infoDiv.innerHTML = result[i].address_name;
                            break;
                        }
                    }
                }
            }

            // 인포윈도우를 표시해주는 함수
            function makeOverListener(map, marker, infowindow) {
                return function() {
                    infowindow.open(map, marker);
                    };
                }
            // 인포윈도우를 닫아주는 함수
            function makeOutListener(infowindow) {
                return function() {
                    infowindow.close();
                    };
                }

            //받아온 데이터를 JSON문자열로 바꾸지 않으면 그냥 object로 읽는다. 그래서 우선 JSON문자열로 변경해준다.
            //문자열로만 변경해주고 읽어보면 그냥 글자를 하나하나 읽어온다. 
            //JSON.parse를 통해 JSON으로 다시 변경해 읽도록하자.
            //그리고 이때 뒤의 특수문자들을 지우지 않으면 JSON.parse할떄 syntax오류 발생.
            var marker_data =  JSON.parse`<%- JSON.stringify(data).replace(/\\/g, '\\\\') %>`;
        

            //마커 이미지 변경
            var markerImage = new kakao.maps.MarkerImage(
                '/images/trash_can.png',
                new kakao.maps.Size(36, 28), new kakao.maps.Point(13, 34));

            // 마커를 담을 리스트
            var markers = [];

            for(var i=0;i<marker_data.length;i++){
                // 마커가 표시될 위치입니다
                var markerPosition  = new kakao.maps.LatLng(marker_data[i]['trash_lat'],marker_data[i]['trash_lng']);

                // 마커를 생성합니다
                var marker = new kakao.maps.Marker({
                position: markerPosition,
                image: markerImage
                });

                // 마커가 지도 위에 표시되도록 설정합니다
                marker.setMap(map);

                // 인포윈도우에 출력할 마커의 위치정보.
                var where = marker_data[i]['trash_addr'];

                var iwContent = '<div class="bAddr">'+where+'</div>';
                iwPosition = markerPosition //인포윈도우 표시 위치입니다

                // 일반 인포윈도우를 생성합니다
                var infowindow = new kakao.maps.InfoWindow({
                position : iwPosition,
                content : iwContent
                });

                //markers에 만든 marker를 넣음.
                markers.push(marker);

                //인포윈도우를 지도에 출력하는 부분.
                //클릭 또는 마우스를 올리면 보이고, 마우스를 때면 사라진다. 
                kakao.maps.event.addListener(marker, 'mouseover', makeOverListener(map, marker, infowindow));
                kakao.maps.event.addListener(marker, 'mouseout', makeOutListener(infowindow));

                // 우클릭 했을때 띄울 인포윈도우
                var iwContent = '<div class="bAddr">' +
                '<span class="title">정보</span>' + 
                '<a href="https://map.kakao.com/link/map/길찾기는 역시 카카오맵!,'+marker_data[i]['trash_lat']+','+marker_data[i]['trash_lng']+'" style="color:blue" target="_blank">'+
                where + '</a>'+
                    '<span class="title">삭제요청</span>' + 
                    '<form id="del_form" method="post">'+
                        '<textarea name="reason" placeholder="삭제요청 사유를 자유롭게 적어주세요"></textarea>'+
                        '<input type="hidden" name="id" value='+marker_data[i]['id']+'>'+
                        '<input style="float: rigth"type ="button" onclick="del_button(); return false;" value="삭제요청">'+
                    '</form>'+
                '</div>'
                ;
                iwRemoveable = true;

                // 인포윈도우를 생성합니다
                var del_infowindow = new kakao.maps.InfoWindow({
                    position : iwPosition, 
                    content : iwContent,
                    removable : iwRemoveable
                });

                // 우클릭하면 쓰레기통을 제거요청하거나 지도에서 길찾기를 할수 있도록 연결해주는 창을 띄운다
                // 드래그를 시작해서 드래그가 끝나면 위에서 띄운 창을 없앤다. 다른곳을 클릭해도 없어진다.
                kakao.maps.event.addListener(marker, 'rightclick', makeOverListener(map, marker, del_infowindow));
                kakao.maps.event.addListener(map, 'dragend', makeOutListener(del_infowindow));
                kakao.maps.event.addListener(map, 'click', makeOutListener(del_infowindow));
            }

            // 클러스터러에 마커들을 추가합니다
            clusterer.addMarkers(markers);

            // 지도에 클릭 이벤트를 등록합니다
            // 지도를 클릭하면 마지막 파라미터로 넘어온 함수를 호출합니다
            // dbclick도 있는데 잘 생각해보고 구현하자. 일단 여기에서 서버로 데이터를 보내고 처리하는 것 부터 하자.
            // rightclick 으로 구현함. 나중에 지도 다른부분 일반 클릭하면 선택한 것 꺼지게 만들어놓자.
            kakao.maps.event.addListener(map, 'rightclick', function(mouseEvent) {        
                
                // 클릭한 위도, 경도 정보를 가져옵니다 
                var latlng = mouseEvent.latLng; 
                
                //좌표로 주소 변환
                searchDetailAddrFromCoords(latlng, function(result, status) {
                    if (status === kakao.maps.services.Status.OK) {
                        var detailAddr = result[0].address.address_name ;
                        //인포윈도우 정보  
                        var iwContent = '<div class="bAddr">' +
                        '<span class="title">정보</span>' + 
                        '<a href="https://map.kakao.com/link/map/길찾기는 역시 카카오맵!,'+latlng.getLat()+','+latlng.getLng()+'" style="color:blue" target="_blank">'+
                        detailAddr + '</a>'+
                        '<span class="title">추가요청</span>' + 
                        '<form id="add_form" method="post">'+
                            '<textarea name="addr">'+detailAddr+'</textarea>'+
                            '<input type="hidden" name="gu_name" value='+result[0].address.region_2depth_name+'>'+
                            '<input type="hidden" name="lat" value='+latlng.getLat()+'>'+
                            '<input type="hidden" name="lng" value='+latlng.getLng()+'>'+
                            '<input style="float: left;"type ="button" onclick="add_button(); return false;" value="추가요청">'+
                        '</form>'
                        '</div>';
                        iwPosition = latlng; //인포윈도우 표시 위치입니다
                        iwRemoveable = true;
            
                        // 인포윈도우를 생성합니다
                        var add_infowindow = new kakao.maps.InfoWindow({
                            position : iwPosition, 
                            content : iwContent,
                            removable : iwRemoveable
                        });

                        // 인포윈도우 지도에 표시.
                        add_infowindow.open(map); 

                        // 마커 위에 인포윈도우를 표시합니다. 두번째 파라미터인 marker를 넣어주지 않으면 지도 위에 표시됩니다
                        kakao.maps.event.addListener(map, 'dragend', makeOutListener(add_infowindow));
                        kakao.maps.event.addListener(map, 'click', makeOutListener(add_infowindow));
                    }
                });
            });

            
            //추가요청 ajax를 비동기 통신
            function add_button(){
                var queryString = $("#add_form").serialize();
                
                $.ajax({
                    type: 'POST',
                    url: 'add',
                    data: queryString,
                    success: function (result) {
                            alert("해당 위치에 쓰레기통 추가요청이 완료되었습니다.");
                        }
                });
            };
             //삭제요청 ajax를 비동기 통신
            function del_button(){
                var queryString = $("#del_form").serialize();
                
                $.ajax({
                    type: 'POST',
                    url: 'invisible_wait',
                    data: queryString,
                    success: function (result) {
                            alert("해당 쓰레기통의 삭제요청이 완료되었습니다.");
                        }
                });
            };
        </script>
      </body>
    </html>